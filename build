#!/usr/bin/env bash

for i in genisoimage mkisofs; do
	if [ -e `command -v ${i}` ]; then
		IMAGER="${i}"
		break
	else
		echo "Please install ${i}"
		fail="true"
	fi
done
[ ${fail}="true" ] && echo "Please install above apps to run this tool" && exit 1
fail=""
for i in mksquashfs cpio gzip sed bash; do
	[ ! -e `command -v ${i}` ] && echo "Please install ${i}" && fail="true"
done
[ ${fail}="true" ] && echo "Please install above apps to run this installer" && exit 1
unset fail

cp -raf config .config
for i in "`find /boot -name \"vmlinuz*\" -o -name \"*kernel*\"`"; do
	if [ `echo ${i} | wc -l` -eq 2 ]; then
		echo -e "There are too many kernels\nPlease choose your kernel to proceed:\n"	
		list=("${i}")
		n=1
		echo -e "Please choose number from ${n} to ${#list[@]}\n-----"
		for a in ${list[@]}; do
			echo "[${n}] - ${a}"
			n+=1
		done
		echo "-----"
		read kernel
		kernel="${list[${kernel}]}"
		unset list
		unset n
		break
	else
		kernel="${i}"
	fi
done
echo "KERNEL=\"${kernel}\"" >>.config
echo "LMK=\"/lib/modules/`file -bL ${kernel} | grep -o 'version [^ ]*' | cut -d ' ' -f 2`\"" >>.config
unset kernel
top="`pwd`"
. .config
cd initrd
INITRD="./create ${DISTRO}"
cd ..
DATA="`mktemp -d`"
BOOT="${DATA}"
temp_root="`mktemp -d`"
mkdir -p ${temp_root}/rootfs ${DATA}/changes ${DATA}/${DISTRO}
echo "rsync --force -aA --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/tmp/* / ${temp_root}/rootfs" > ${temp_root}/rsync_cmd
chmod +x ${temp_root}/rsync_cmd
chmod +x -R copyroot
cp -raf copyroot/* ${temp_root}
${temp_root}/rsync_cmd && \
if ! mksquashfs ${temp_root}/rootfs ${DATA}/${DISTRO}/system.sfs -comp xz; then
	rm -f ${DATA}/${DISTRO}/system.sfs
	if ! mksquashfs ${temp_root}/rootfs ${DATA}/${DISTRO}/system.sfs; then
		echo -e "\nCan't create \"system.sfs\" file!\nAborting!\n"
		rm -rf ${temp_root} ${DATA}
		exit 1
	fi
fi
mv ${INITRD} ${BOOT}/initrfs.img
cp bootfiles/* ${BOOT}
sed -i -r "s/__DISTRO__/${DISTRO}/" ${BOOT}/syslinux.cfg
cp -raf ${KERNEL} ${BOOT}/vmlinuz
cd ${DATA}
timedate="`date +"%d-%m-%Y"`"
${MKISOFS} -o /${DISTRO}-${timedate}.iso -J -R -D -A ${DISTRO} -V ${DISTRO} -no-emul-boot -boot-info-table -boot-load-size 4 -b isolinux.bin -c isolinux.boot .
if command -v isohybrid >/dev/null; then
	isohybrid "/${DISTRO}-${timedate}.iso"
fi
cd ${top}
rm -rf ${temp_root} ${DATA}

#!/bin/sh

export PATH=".:/:/usr/sbin:/usr/bin:/sbin:/bin"
export LD_LIBRARY_PATH="/lib:/lib/i386-linux-gnu:/lib64:/lib64/x86_64-linux-gnu:/usr/lib/i386-linux-gnu:/usr/lib64/x86_64-linux-gnu"
export MEMORY=/memory
export CHANGES_MNT=${MEMORY}/changes
export CHANGES=${CHANGES_MNT}/changes
export WORK=${CHANGES_MNT}/work
export UNION=${MEMORY}/union
export DATAMNT=${MEMORY}/data
export SYSTEM=${MEMORY}/system

. /lib/.config

if [ ! -e /lib/initramfs_escaped ]; then
	SWITCH=/m
	mkdir -p ${SWITCH}
	mount -t tmpfs -o size="100%" tmpfs ${SWITCH}
	cp -a /??* ${SWITCH} 2>/dev/null
	cd ${SWITCH}
	touch lib/initramfs_escaped
	exec switch_root . $0
fi

persistent_changes()
{
	if ! grep -q perch /proc/cmdline; then
		return
	fi
	local CHANGES T1 T2 EXISTS
	CHANGES=$DATAMNT/changes
	T1="$CHANGES/.empty"
	T2="$T1"2
	mkdir -p "$2"
	touch "$T1" 2>/dev/null && rm -f "$T1" 2>/dev/null
	if [ $? -ne 0 ]; then
		return
	fi
	echo "Testing persistent changes for posix compatibility"
	touch "$T1" && ln -sf "$T1" "$T2" 2>/dev/null && \
	chmod +x "$T1" 2>/dev/null && test -x "$T1" && \
	chmod -x "$T1" 2>/dev/null && test ! -x "$T1" && \
	rm "$T1" "$T2" 2>/dev/null
	if [ $? -eq 0 ]; then
		echo "Activating native persistent changes"
		mount --bind "$CHANGES" "$2"
		return
	fi
	if [ -e "$CHANGES/changes.dat" ]; then
		echo "Restoring persistent changes"
		EXISTS="true"
	fi
	mount.dynfilefs "$CHANGES/changes.dat" 4000 "$2"
	if [ ! "$EXISTS" ]; then
		mke2fs -F "$2/loop.fs" >/dev/null 2>&1
	fi
	mount -o loop,sync "$2/loop.fs" "$2"
	rm "$T1" "$T2" 2>/dev/null
	rmdir "$2/lost+found" 2>/dev/null
}
debug_shell()
{
	if [ "$DEBUG_IS_ENABLED" ]; then
		echo -e "Debug shell activated!\nControl+D or 'exit' to contiunue boot.\n"
		setsid sh -c 'exec sh </dev/tty1 >/dev/tty1 2>&1'
	fi
}
change_root()
{
	cd "$1"
	umount -f /sys /proc
	echo "proc /proc proc defaults 0 0" >etc/fstab
	echo "sysfs /sys sysfs defaults 0 0" >>etc/fstab
	echo "devpts /dev/pts devpts gid=5,mode=620 0 0" >>etc/fstab
	echo "tmpfs /dev/shm tmpfs defaults 0 0" >>etc/fstab
	echo "overlay / overlay defaults 0 0" >>etc/fstab
	mkdir -p run
	mount -t tmpfs tmpfs run
	mkdir -p run/initramfs
	mount -o remount,ro overlay .
	pivot_root . run/initramfs
	exec chroot . init
}

mkdir -p ${UNION} ${DATAMNT} ${SYSTEM}
mount -t proc proc /proc
echo "0" >/proc/sys/kernel/printk
mount -t sysfs sysfs /sys
if grep -q debug /proc/cmdline; then
	DEBUG_IS_ENABLED=1
	set -x
fi
debug_shell
ln -sf /proc/mounts /etc/mtab
find /lib/modules/`uname -r` -name "*.ko" | sed -r "s:^.*/|[.]ko\$::g" | xargs -n 1 modprobe
sleep 3
if [ -r /proc/sys/kernel/hotplug ]; then
	command -v mdev >/proc/sys/kernel/hotplug
fi
mdev -s
debug_shell
if [ -e /sys/block/zram0/disksize ]; then
	echo 536870912 >/sys/block/zram0/disksize
	mkswap /dev/zram0
	swapon /dev/zram0
	echo 100 >/proc/sys/vm/swappiness
fi
mdadm --assemble --scan
sleep 0.5
debug_shell
for i in `blkid | cut -d: -f1 | sort | grep -vE "loop|zram|ram"`; do
	echo "Searching ${DISTRO} in ${i} ..."
	mount ${i} ${DATAMNT} 2>/dev/null
	sleep 0.5
	if [ -e ${DATAMNT}/${DISTRO}/system.sfs ]; then
		echo "Found ${DISTRO} in ${i}"
		mount ${DATAMNT}/${DISTRO}/system.sfs ${SYSTEM}
		sleep 0.5
		break
	else
		umount -f ${DATAMNT}
	fi
done
debug_shell
persistent_changes ${SYSTEM} ${CHANGES_MNT}
mkdir -p ${CHANGES} ${WORK}
debug_shell
mount -t overlay -o lowerdir=${SYSTEM},upperdir=${CHANGES},workdir=${WORK} overlay ${UNION}
debug_shell
echo "Starting ${DISTRO}"
sleep 2
change_root "$UNION" || clear; echo "!!ERROR occured, you shouldn't be here.!!"; sleep 3
while :; do
	clear
	echo "Rescue shell activated!"
	setsid sh -c 'exec sh </dev/tty1 >/dev/tty1 2>&1'
done
